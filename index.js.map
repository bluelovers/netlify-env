{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAqGa,QAAA,cAAc,GAAoB;IAC9C,gBAAgB;IAChB,QAAQ;IACR,cAAc;IACd,MAAM;IACN,YAAY;IACZ,SAAS;IACT,WAAW;IAEX,KAAK;IACL,YAAY;IACZ,kBAAkB;IAElB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IAEpB,eAAe;IACf,aAAa;IACb,cAAc;CACd,CAAC;AASF,SAAgB,aAAa,CAAwB,aAA2C,OAAO,CAAC,GAAQ,EAAE,gBAA0B;IAE3I,IAAI,OAAO,UAAU,KAAK,SAAS,EACnC;QACC,gBAAgB,GAAG,CAAC,CAAC,UAAU,CAAC;QAChC,UAAU,GAAG,OAAO,CAAC,GAAqB,CAAA;KAC1C;SACI,IAAI,OAAO,UAAU,KAAK,WAAW,EAC1C;QACC,UAAU,GAAG,OAAO,CAAC,GAAqB,CAAA;KAC1C;IAED,IAAI,gBAAgB,EACpB;QACC,OAAO,UAAU,GAAG;YACnB,GAAG,OAAO,CAAC,GAAG;SACI,CAAA;KACnB;IAED,MAAM,EACL,cAAc,EACd,MAAM,EACN,YAAY,EACZ,IAAI,EACJ,UAAU,EACV,OAAO,EACP,SAAS,EAET,GAAG,EACH,UAAU,EACV,gBAAgB,EAEhB,mBAAmB,EACnB,iBAAiB,EACjB,kBAAkB,EAElB,aAAa,EACb,WAAW,EACX,YAAY,GACZ,GAAG,UAA4B,CAAC;IAEjC;;;;;;;;;;;;;MAaE;IAEF;;;;;;;;;MASE;IAEF,IAAI,GAAG,GAAsB;QAC5B,cAAc;QACd,MAAM;QACN,YAAY;QACZ,IAAI;QACJ,UAAU;QACV,OAAO;QACP,SAAS;QAET,GAAG;QACH,UAAU;QACV,gBAAgB;QAEhB,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAElB,aAAa;QACb,WAAW;QACX,YAAY;KACZ,CAAC;IAEF,OAAO,GAAG,CAAC;AACZ,CAAC;AA1FD,sCA0FC;AAED,SAAgB,eAAe,CAAwB,UAA+B;IAErF,aAAa;IACb,IAAI,GAAG,GAAG,aAAa,CAAC,UAAU,EAAE,IAAI,CAAyC,CAAC;IAElF,IACA;QACC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;KACvE;IACD,OAAO,CAAC,EACR;QACC,GAAG,CAAC,uBAAuB,GAAG,EAAE,CAAC;QACjC,OAAO,CAAC,IAAI,CAAE,CAAW,CAAC,OAAO,CAAC,CAAC;KACnC;IAED,OAAO,GAAG,CAAC;AACZ,CAAC;AAhBD,0CAgBC;AAED,kBAAe,aAAa,CAAA","sourcesContent":["import { ITSOverwrite } from 'ts-type';\nimport { INetlifyHookBodyGitee } from './lib/gitee';\n\n/**\n * Build Environment Variables\n *\n * In addition to the variables you choose to define,\n * Netlify has a number of pre-defined variables built in.\n * Note that the variables listed are automatically set for your builds,\n * and their values are not changeable.\n *\n * These variables are:\n *\n * https://www.netlify.com/docs/continuous-deployment/\n */\nexport interface INetlifyEnvSource {\n\t/**\n\t * URL to the Git repository the build pulls changes from.\n\t */\n\tREPOSITORY_URL: string;\n\t/**\n\t * Reference to check out after fetching changes from the Git repository.\n\t */\n\tBRANCH: string;\n\t/**\n\t * Whether the build is from a pull/merge request or not.\n\t */\n\tPULL_REQUEST: string;\n\t/**\n\t * Name of the head branch received from a Git provider.\n\t */\n\tHEAD: string;\n\t/**\n\t * Reference of the commit weâ€™re building.\n\t */\n\tCOMMIT_REF: string;\n\n\t/**\n\t * Name of the context a deploy is built around,\n\t * it can be production, deploy-preview or branch-deploy.\n\t */\n\tCONTEXT: string;\n\t/**\n\t * the ID of the pull/merge request and deploy preview (e.g. 1211).\n\t * These two numbers will always match\n\t * (deploy-preview-12 is for PR # 12 in your repository).\n\t */\n\tREVIEW_ID: string;\n\n\t/**\n\t * This URL represents the main address to your site.\n\t * It can be either a Netlify subdomain or your own custom domain if you set one;\n\t * for example, https://example.netlify.com or https://www.example.com.\n\t */\n\tURL: string;\n\t/**\n\t * This URL represents the unique URL for an individual deploy.\n\t * It starts with a unique ID that identifies the deploy;\n\t * for example, https://578ab634d6865d5cf960d620--open-api.netlify.com.\n\t */\n\tDEPLOY_URL: string;\n\t/**\n\t * This URL represents the primary URL for an individual deploy,\n\t * or a group of them, like branch deploys and Deploy Previews;\n\t * for example,\n\t * https://beta--open-api.netlify.com or https://deploy-preview-34--open-api.netlify.com.\n\t */\n\tDEPLOY_PRIME_URL: string;\n\n\t/**\n\t * Title of the incoming webhook.\n\t */\n\tINCOMING_HOOK_TITLE: string;\n\t/**\n\t * URL of the incoming webhook\n\t */\n\tINCOMING_HOOK_URL: string;\n\t/**\n\t * INCOMING_HOOK_BODY\n\t */\n\tINCOMING_HOOK_BODY: string;\n\n\t// unknow or old api\n\n\tWEBHOOK_TITLE?: string;\n\tWEBHOOK_URL?: string;\n\tWEBHOOK_BODY?: string;\n}\n\nexport type IProcessEnv = typeof process.env | Partial<INetlifyEnvSource>\nexport type INetlifyEnv<T extends IProcessEnv> = T & INetlifyEnvSource;\n\nexport type INetlifyEnvParsed<T extends IProcessEnv> = ITSOverwrite<INetlifyEnv<T>, {\n\tINCOMING_HOOK_BODY_JSON?: INetlifyHookBodyGitee | {\n\t\t[key: string]: unknown,\n\t}\n}>;\n\nexport type INetlifyEnvKey = keyof INetlifyEnvSource\nexport type INetlifyEnvKeys = INetlifyEnvKey[]\n\nexport const netlifyEnvKeys: INetlifyEnvKeys = [\n\t'REPOSITORY_URL',\n\t'BRANCH',\n\t'PULL_REQUEST',\n\t'HEAD',\n\t'COMMIT_REF',\n\t'CONTEXT',\n\t'REVIEW_ID',\n\n\t'URL',\n\t'DEPLOY_URL',\n\t'DEPLOY_PRIME_URL',\n\n\t'INCOMING_HOOK_TITLE',\n\t'INCOMING_HOOK_URL',\n\t'INCOMING_HOOK_BODY',\n\n\t'WEBHOOK_TITLE',\n\t'WEBHOOK_URL',\n\t'WEBHOOK_BODY',\n];\n\nexport function getNetlifyEnv<T extends IProcessEnv>(processEnv: T | INetlifyEnv<T>, returnProcessEnv: true): INetlifyEnv<T>\nexport function getNetlifyEnv<T extends IProcessEnv>(processEnv: T | INetlifyEnv<T>, returnProcessEnv?: false): INetlifyEnvSource\nexport function getNetlifyEnv<T extends IProcessEnv>(processEnv: T | INetlifyEnv<T>, returnProcessEnv?: boolean): INetlifyEnv<IProcessEnv> | INetlifyEnvSource\nexport function getNetlifyEnv(returnProcessEnv: true): INetlifyEnv<IProcessEnv>\nexport function getNetlifyEnv(returnProcessEnv?: false): INetlifyEnvSource\nexport function getNetlifyEnv(): INetlifyEnvSource\nexport function getNetlifyEnv(returnProcessEnv?: boolean): INetlifyEnv<IProcessEnv> | INetlifyEnvSource\nexport function getNetlifyEnv<T extends IProcessEnv>(processEnv: T | INetlifyEnv<T> | boolean = process.env as T, returnProcessEnv?: boolean)\n{\n\tif (typeof processEnv === 'boolean')\n\t{\n\t\treturnProcessEnv = !!processEnv;\n\t\tprocessEnv = process.env as INetlifyEnv<T>\n\t}\n\telse if (typeof processEnv === 'undefined')\n\t{\n\t\tprocessEnv = process.env as INetlifyEnv<T>\n\t}\n\n\tif (returnProcessEnv)\n\t{\n\t\treturn processEnv = {\n\t\t\t...process.env,\n\t\t} as INetlifyEnv<T>\n\t}\n\n\tconst {\n\t\tREPOSITORY_URL,\n\t\tBRANCH,\n\t\tPULL_REQUEST,\n\t\tHEAD,\n\t\tCOMMIT_REF,\n\t\tCONTEXT,\n\t\tREVIEW_ID,\n\n\t\tURL,\n\t\tDEPLOY_URL,\n\t\tDEPLOY_PRIME_URL,\n\n\t\tINCOMING_HOOK_TITLE,\n\t\tINCOMING_HOOK_URL,\n\t\tINCOMING_HOOK_BODY,\n\n\t\tWEBHOOK_TITLE,\n\t\tWEBHOOK_URL,\n\t\tWEBHOOK_BODY,\n\t} = processEnv as INetlifyEnv<T>;\n\n\t/*\n\tconst DEPLOY_PREVIEW = DEPLOY_PRIME_URL && DEPLOY_PRIME_URL.includes('deploy-preview');\n\n\tlet GITHUB_URL: string;\n\tif (REPOSITORY_URL)\n\t{\n\t\tconst githubPattern = /git@github\\.com:([a-zA-Z0-9-]{1,39})\\/([a-zA-Z0-9_.-]+)/;\n\t\tconst githubMatches = githubPattern.exec(REPOSITORY_URL);\n\t\tif (githubMatches)\n\t\t{\n\t\t\tGITHUB_URL = `https://github.com/${githubMatches[1]}/${githubMatches[2]}`;\n\t\t}\n\t}\n\t*/\n\n\t/*\n\tlet DEPLOY_PREVIEW_PR_NUMBER: number;\n\tlet DEPLOY_PREVIEW_PR_URL: string;\n\tif (DEPLOY_PREVIEW)\n\t{\n\t\tconst previewPattern = /https:\\/\\/deploy-preview-([0-9]+)--/;\n\t\tDEPLOY_PREVIEW_PR_NUMBER = parseInt(previewPattern.exec(DEPLOY_PRIME_URL)[1]);\n\t\tDEPLOY_PREVIEW_PR_URL = `${GITHUB_URL}/pull/${DEPLOY_PREVIEW_PR_NUMBER}`;\n\t}\n\t*/\n\n\tlet ret: INetlifyEnvSource = {\n\t\tREPOSITORY_URL,\n\t\tBRANCH,\n\t\tPULL_REQUEST,\n\t\tHEAD,\n\t\tCOMMIT_REF,\n\t\tCONTEXT,\n\t\tREVIEW_ID,\n\n\t\tURL,\n\t\tDEPLOY_URL,\n\t\tDEPLOY_PRIME_URL,\n\n\t\tINCOMING_HOOK_TITLE,\n\t\tINCOMING_HOOK_URL,\n\t\tINCOMING_HOOK_BODY,\n\n\t\tWEBHOOK_TITLE,\n\t\tWEBHOOK_URL,\n\t\tWEBHOOK_BODY,\n\t};\n\n\treturn ret;\n}\n\nexport function parseNetlifyEnv<T extends IProcessEnv>(processEnv?: T | INetlifyEnv<T>): INetlifyEnvParsed<T & INetlifyEnvSource>\n{\n\t// @ts-ignore\n\tlet env = getNetlifyEnv(processEnv, true) as INetlifyEnvParsed<INetlifyEnvSource>;\n\n\ttry\n\t{\n\t\tenv.INCOMING_HOOK_BODY_JSON = JSON.parse(env.INCOMING_HOOK_BODY) || {};\n\t}\n\tcatch (e)\n\t{\n\t\tenv.INCOMING_HOOK_BODY_JSON = {};\n\t\tconsole.warn((e as Error).message);\n\t}\n\n\treturn env;\n}\n\nexport default getNetlifyEnv\n"]}